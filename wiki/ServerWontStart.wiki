#summary What to look for when Red5 wont start.
#labels Errors,Eclipse

= Introduction =

It can be frustrating when the server wont start, this can be caused due to a lot of factors.

== Wrong Java Version ==

When the code has been compiled with a JDK version newer than the one you are using to execute it, you will see an error similar to this:

{{{
Exception in thread "main" java.lang.UnsupportedClassVersionError: Test : Unsupported major.minor version 51.0
}}}

Here are the current versions with their major / minor identifiers

{{{
Major  Minor      Java version  
45       3           1.0
45       3           1.1
46       0           1.2
47       0           1.3
48       0           1.4
49       0           1.5
50       0           1.6
51       0           1.7
}}}

== Invalid Property ==

This happens when a spring configuration doesn't match the code. In many cases, its a simple fix. Your error will look something like this:

{{{
[INFO] [main] org.springframework.beans.factory.support.DefaultListableBeanFactory - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@467ddc66: defining beans [placeholderConfig,red5.common,red5.core,context.loader,pluginLauncher,tomcat.server]; root of factory hierarchy
Exception org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'red5.common' defined in class path resource [red5.xml]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Could not instantiate bean class [org.springframework.context.support.FileSystemXmlApplicationContext]: Constructor threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creati
ng bean with name 'red5.server' defined in class path resource [red5-common.xml]
: Error setting property values; nested exception is org.springframework.beans.NotWritablePropertyException: Invalid property 'notifierThreadPoolSize' of bean class [org.red5.server.Server]: Bean property 'notifierThreadPoolSize' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?
}}}

The invalid property is _notifierThreadPoolSize_ in the _red5-common.xml_ file; go to that section and simply remove the property.

{{{
<bean id="red5.server" class="org.red5.server.Server">
    <property name="notifierThreadPoolSize" value="${notifier.threads}"/>
</bean>
}}}

becomes this

{{{
<bean id="red5.server" class="org.red5.server.Server">
</bean>
}}}

== ClassNotFoundException Launcher ==

When the _Launcher_ cannot be located, it usually means the server jar is missing or misnamed. The Red5 server jar must be named like so until we fix the bootstrap bug: {{{red5-server-1.0.jar}}}

Here is what the error may look like:
{{{
Exception in thread "main" java.lang.ClassNotFoundException: org.red5.server.Launcher
        at java.net.URLClassLoader$1.run(URLClassLoader.java:366)
        at java.net.URLClassLoader$1.run(URLClassLoader.java:355)
        at java.security.AccessController.doPrivileged(Native Method)
        at java.net.URLClassLoader.findClass(URLClassLoader.java:354)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:423)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:356)
        at java.lang.Class.forName0(Native Method)
        at java.lang.Class.forName(Class.java:264)
        at org.red5.server.Bootstrap.bootStrap(Bootstrap.java:115)
        at org.red5.server.Bootstrap.main(Bootstrap.java:48)
}}}

== Missing getter or setter for serializer / deserializer ==

A change was made in 1.0.2 which added static-access to the Serializer and Deserializer classes. This change will cause this issue to appear if you don't have an updated configuration file.
{{{
[INFO] [main] org.springframework.beans.factory.support.DefaultListableBeanFactory - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1378732d: defining beans [placeholderConfig,red5.common,red5.core,context.loader,pluginLauncher,tomcat.server]; root of factory hierarchy Exception org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'red5.common' defined in class path resource [red5.xml]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Could not instantiate bean class [org.springframework.context.support.FileSystemXmlApplicationContext]: Constructor threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'rtmptCodecFactory' defined in class path resource [red5-common.xml]: Error setting property values; nested exception is org.springframework.beans.NotWritablePropertyException: Invalid property 'serializer' of bean class [org.red5.server.net.rtmpt.codec.RTMPTCodecFactory]: Bean property 'serializer' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?
}}}

To fix this, perform the following steps:

1. Open the conf/red5-common.xml file
2. Remove these two nodes
{{{
  <!-- Serializes objects to AMF binary -->
  <bean id="serializer" class="org.red5.io.object.Serializer"/>
  <!-- Deserializes objects from AMF binary -->
  <bean id="deserializer" class="org.red5.io.object.Deserializer"/>
}}}
3. Remove these lines from minaEncoder bean
{{{
  <property name="serializer">
    <ref bean="serializer"/>
  </property>
}}}
4. Remove these lines from minaDecoder bean
{{{
  <property name="deserializer">
    <ref bean="deserializer"/>
  </property>
}}}
5. Remove these lines from rtmptCodecFactory bean
{{{
  <property name="serializer">
    <ref bean="serializer"/>
  </property>
  <property name="deserializer">
    <ref bean="deserializer"/>
  </property>
}}}
6. Save the file and restart the server

== Could not find or load main class org.red5.server.Bootstrap ==

Since we now use Maven, our output jars are named following their conventions and this leads to this error. The simple fix is to rename the two jars, removing the _.2-SNAPSHOT_ part.
{{{
red5-server-1.0.2-SNAPSHOT.jar
red5-server-1.0.2-SNAPSHOT-bootstrap.jar
}}}
renamed
{{{
red5-server-1.0.jar
red5-server-1.0-bootstrap.jar
}}}

== Eclipse red5 plugin will not start ==

Since we now use Maven, our output jars are named following their conventions and this leads to this error when using the red5 plugin for Eclipse. The simple fix is to rename the two jars.
{{{
red5-server-1.0.2-SNAPSHOT.jar
red5-server-1.0.2-SNAPSHOT-bootstrap.jar
}}}
renamed
{{{
red5.jar
boot.jar
}}}