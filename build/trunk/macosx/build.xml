<?xml version="1.0"?>
<!-- ======================================================================                                               
     Red5 build script for Mac OSX   
     
     = How to release =
     1. Get the latest tarball or tag from svn of the Red5 server and unpack it. 
     2. Update the version number and source directory in the build.properties file
	and point it to the root of the unpacked Red5 installation directory.
     3. Start building with the 'ant' command.
     4. The output file (setup-red5xx.dmg) will be created in the DIST_DIR directory.
                 
     Thijs Triemstra (info@collab.nl), 07/2007
     Based on script from http://brok3n.org/archivesextreme/2006/09/dmg_creation_ti.html                                                             
     ====================================================================== -->
<project name="Red5" default="all" basedir=".">
	
	<!-- Include build configuration -->
	<property file="./build.properties" />

	<!-- Init build properties -->
	<property name="BUILD_DIR" value="build"/>
	<property name="DIST_DIR" value="dist"/>
	<property name="RESOURCES_DIR" value="resources"/>
	<property name="TOOLS_DIR" value="tools"/>
	<property name="IMAGE_CONTENTS" value="${BUILD_DIR}/imagecontents"/>
	<property name="PACKAGES_DIR" value="packages"/>
	<property name="DOCS_PACKAGE_NAME" value="docs"/>
	<property name="DOCS_PACKAGE" value="${PACKAGES_DIR}/${DOCS_PACKAGE_NAME}"/>
	<property name="FLASH_PACKAGE_NAME" value="flash"/>
	<property name="FLASH_PACKAGE" value="${PACKAGES_DIR}/${FLASH_PACKAGE_NAME}"/>
	<property name="MAIN_PACKAGE_NAME" value="main"/>
	<property name="MAIN_PACKAGE" value="${PACKAGES_DIR}/${MAIN_PACKAGE_NAME}"/>
	<property name="SOURCE_PACKAGE_NAME" value="source"/>
	<property name="SOURCE_PACKAGE" value="${PACKAGES_DIR}/${SOURCE_PACKAGE_NAME}"/>
	<property name="META_PACKAGE_NAME" value="release"/>
	<property name="META_PACKAGE" value="${PACKAGES_DIR}/${META_PACKAGE_NAME}"/>
	<property name="RELEASE_NAME" value="red5-${VERSION}"/>
	<property name="FANCY_NAME" value="Red5 v${VERSION}"/>
	<property name="DMG_NAME" value="setup-${RELEASE_NAME}.dmg"/>
	<property name="MPKG_NAME" value="Install-${RELEASE_NAME}.mpkg"/>
	
    <description>
    	Red5 for Mac OSX
    </description>

    <!-- - - - - - - - - - - - - - - - - - 
          target: all                      
    - - - - - - - - - - - - - - - - - -->
    <target name="all" depends="clean, init, compile, build, release">
    	<echo>Completed building ${FANCY_NAME} for ${os.name}</echo>
    </target>

    <!-- - - - - - - - - - - - - - - - - - 
          target: clean                      
    - - - - - - - - - - - - - - - - - -->
    <target name="clean">
    	<delete 
    		dir="${BUILD_DIR}" 
    		failOnError="false" 
    		includeEmptyDirs="true" />
	<delete 
    		dir="${DIST_DIR}" 
    		failOnError="false" 
    		includeEmptyDirs="true" />
    </target>
	
    <!-- - - - - - - - - - - - - - - - - - 
          target: init                      
    - - - - - - - - - - - - - - - - - -->
    <target name="init">
    	<mkdir dir="${BUILD_DIR}"/>
	<mkdir dir="${IMAGE_CONTENTS}"/>
	<mkdir dir="${DIST_DIR}"/>
	<mkdir dir="${BUILD_DIR}/metapackage"/>
	<mkdir dir="${BUILD_DIR}/${DOCS_PACKAGE_NAME}"/>
	<mkdir dir="${BUILD_DIR}/${FLASH_PACKAGE_NAME}"/>
	<mkdir dir="${BUILD_DIR}/${FLASH_PACKAGE_NAME}/swf"/>
	<mkdir dir="${BUILD_DIR}/${MAIN_PACKAGE_NAME}"/>
	<mkdir dir="${BUILD_DIR}/${SOURCE_PACKAGE_NAME}"/>
	<mkdir dir="${BUILD_DIR}/${META_PACKAGE_NAME}"/>
	<mkdir dir="${BUILD_DIR}/${META_PACKAGE_NAME}/English.lproj"/>
    </target>

    <!-- - - - - - - - - - - - - - - - - - 
          target: compile
    - - - - - - - - - - - - - - - - - -->
    <target name="compile">
	<exec executable="make" failonerror="true">
		<arg line='-C ${SRC_DIR}'/>
	</exec>
    </target>
	
    <!-- - - - - - - - - - - - - - - - - - 
            target: build
    - - - - - - - - - - - - - - - - - -->
    <target name="build">
	<echo>Copying plist files for packages...</echo>
	<exec executable="cp" failonerror="true">
		<arg line='-r ${PACKAGES_DIR} ${BUILD_DIR}/${PACKAGES_DIR}'/>
	</exec>
	<echo>Copying files for '${DOCS_PACKAGE_NAME}' package...</echo>
	<exec executable="cp" failonerror="true">
		<arg line='-r ${SRC_DIR}/doc ${BUILD_DIR}/${DOCS_PACKAGE_NAME}'/>
	</exec>
	<echo>Copying files for '${FLASH_PACKAGE_NAME}' package...</echo>
	<exec executable="cp" failonerror="true">
		<arg line='-r ${SRC_DIR}/swf ${BUILD_DIR}/${FLASH_PACKAGE_NAME}'/>
	</exec>
	<echo>Copying files for '${MAIN_PACKAGE_NAME}' package...</echo>
	<exec executable="cp" failonerror="true">
		<arg line='-r ${SRC_DIR}/conf ${BUILD_DIR}/${MAIN_PACKAGE_NAME}'/>
	</exec>
	<exec executable="cp" failonerror="true">
		<arg line='-r ${SRC_DIR}/lib ${BUILD_DIR}/${MAIN_PACKAGE_NAME}'/>
	</exec>
	<exec executable="cp" failonerror="true">
		<arg line='${SRC_DIR}/license.txt ${BUILD_DIR}/${MAIN_PACKAGE_NAME}'/>
	</exec>
	<exec executable="cp" failonerror="true">
		<arg line='${SRC_DIR}/red5.jar ${BUILD_DIR}/${MAIN_PACKAGE_NAME}'/>
	</exec>
	<exec executable="cp" failonerror="true">
		<arg line='${SRC_DIR}/red5.sh ${BUILD_DIR}/${MAIN_PACKAGE_NAME}'/>
	</exec>
	<exec executable="cp" failonerror="true">
		<arg line='${SRC_DIR}/red5-shutdown.sh ${BUILD_DIR}/${MAIN_PACKAGE_NAME}'/>
	</exec>
	<exec executable="cp" failonerror="true">
		<arg line='-r ${SRC_DIR}/webapps ${BUILD_DIR}/${MAIN_PACKAGE_NAME}'/>
	</exec>
	<!-- Copy Red5 launcher -->
	<exec executable="cp" failonerror="true">
		<arg line='-r ${RESOURCES_DIR}/Red5.app ${BUILD_DIR}/${MAIN_PACKAGE_NAME}'/>
	</exec>
	<replace file="${BUILD_DIR}/${MAIN_PACKAGE_NAME}/Red5.app/Contents/Resources/en.lproj/InfoPlist.strings" 
		 propertyFile="build.properties">
  		<replacefilter token="@VERSION@" property="VERSION"/>
		<replacefilter token="@COPYRIGHT@" property="COPYRIGHT"/>
	</replace>
	<!-- Update version info -->
	<replace file="${BUILD_DIR}/${MAIN_PACKAGE_NAME}/Red5.app/Contents/Info.plist" 
		 propertyFile="build.properties">
  		<replacefilter token="@VERSION@" property="VERSION"/>
		<replacefilter token="@COPYRIGHT@" property="COPYRIGHT"/>
	</replace>
	<exec executable="/Developer/Tools/SetFile" failonerror="true">
		<arg line='-a E ${BUILD_DIR}/${MAIN_PACKAGE_NAME}/Red5.app'/>
	</exec>
	<echo>Copying files for '${SOURCE_PACKAGE_NAME}' package...</echo>
	<exec executable="cp" failonerror="true">
		<arg line='${SRC_DIR}/build.properties ${BUILD_DIR}/${SOURCE_PACKAGE_NAME}'/>
	</exec>
	<exec executable="cp" failonerror="true">
		<arg line='${SRC_DIR}/build.xml ${BUILD_DIR}/${SOURCE_PACKAGE_NAME}'/>
	</exec>
	<exec executable="cp" failonerror="true">
		<arg line='-r ${SRC_DIR}/src ${BUILD_DIR}/${SOURCE_PACKAGE_NAME}'/>
	</exec>
	<exec executable="cp" failonerror="true">
		<arg line='-r ${SRC_DIR}/test ${BUILD_DIR}/${SOURCE_PACKAGE_NAME}'/>
	</exec>
	<echo>Copying files for '${META_PACKAGE_NAME}' package...</echo>
	<exec executable="cp" failonerror="true">
		<arg line='${RESOURCES_DIR}/background.gif ${BUILD_DIR}/${META_PACKAGE_NAME}/English.lproj'/>
	</exec>
	<exec executable="cp" failonerror="true">
		<arg line='${RESOURCES_DIR}/Welcome.txt ${BUILD_DIR}/${META_PACKAGE_NAME}/English.lproj'/>
	</exec>
	<!-- Update version info -->
	<replace file="${BUILD_DIR}/${META_PACKAGE_NAME}/English.lproj/Welcome.txt" 
		 propertyFile="build.properties">
  		<replacefilter token="@VERSION@" property="VERSION"/>
	</replace>
	<replace file="${BUILD_DIR}/${PACKAGES_DIR}/${DOCS_PACKAGE_NAME}/Info.plist" 
		 propertyFile="build.properties">
  		<replacefilter token="@VERSION@" property="VERSION"/>
		<replacefilter token="@COPYRIGHT@" property="COPYRIGHT"/>
	</replace>
	<replace file="${BUILD_DIR}/${PACKAGES_DIR}/${FLASH_PACKAGE_NAME}/Info.plist" 
		 propertyFile="build.properties">
  		<replacefilter token="@VERSION@" property="VERSION"/>
		<replacefilter token="@COPYRIGHT@" property="COPYRIGHT"/>
	</replace>
	<replace file="${BUILD_DIR}/${PACKAGES_DIR}/${MAIN_PACKAGE_NAME}/Info.plist" 
		 propertyFile="build.properties">
  		<replacefilter token="@VERSION@" property="VERSION"/>
		<replacefilter token="@COPYRIGHT@" property="COPYRIGHT"/>
	</replace>
	<replace file="${BUILD_DIR}/${PACKAGES_DIR}/${SOURCE_PACKAGE_NAME}/Info.plist" 
		 propertyFile="build.properties">
  		<replacefilter token="@VERSION@" property="VERSION"/>
		<replacefilter token="@COPYRIGHT@" property="COPYRIGHT"/>
	</replace>
	<!-- Add license -->
	<exec executable="cp" failonerror="true">
		<arg line='${SRC_DIR}/license.txt ${BUILD_DIR}/${META_PACKAGE_NAME}/English.lproj/License.txt'/>
	</exec>
	<!-- Add changelog -->
	<exec executable="cp" failonerror="true">
		<arg line='${SRC_DIR}/doc/changelog.txt ${BUILD_DIR}/${META_PACKAGE_NAME}/English.lproj/ReadMe.txt'/>
	</exec>
	<echo>Creating '${DOCS_PACKAGE_NAME}' package...</echo>
	<exec executable="/Developer/Tools/packagemaker" failonerror="true">
		<arg line='-build -ds -v'/>
		<arg line='-p ${BUILD_DIR}/metapackage/${DOCS_PACKAGE_NAME}.pkg'/>
		<arg line='-f ${BUILD_DIR}/${DOCS_PACKAGE_NAME}'/>
		<arg line='-i ${BUILD_DIR}/${DOCS_PACKAGE}/Info.plist'/>
		<arg line='-d ${BUILD_DIR}/${DOCS_PACKAGE}/Description.plist'/>
	</exec>
	<echo>Creating '${FLASH_PACKAGE_NAME}' package...</echo>
	<exec executable="/Developer/Tools/packagemaker" failonerror="true">
		<arg line='-build -ds -v'/>
		<arg line='-p ${BUILD_DIR}/metapackage/${FLASH_PACKAGE_NAME}.pkg'/>
		<arg line='-f ${BUILD_DIR}/${FLASH_PACKAGE_NAME}'/>
		<arg line='-i ${BUILD_DIR}/${FLASH_PACKAGE}/Info.plist'/>
		<arg line='-d ${BUILD_DIR}/${FLASH_PACKAGE}/Description.plist'/>
	</exec>
	<echo>Creating '${MAIN_PACKAGE_NAME}' package...</echo>
	<exec executable="/Developer/Tools/packagemaker" failonerror="true">
		<arg line='-build -ds -v'/>
		<arg line='-p ${BUILD_DIR}/metapackage/${MAIN_PACKAGE_NAME}.pkg'/>
		<arg line='-f ${BUILD_DIR}/${MAIN_PACKAGE_NAME}'/>
		<arg line='-i ${BUILD_DIR}/${MAIN_PACKAGE}/Info.plist'/>
		<arg line='-d ${BUILD_DIR}/${MAIN_PACKAGE}/Description.plist'/>
	</exec>
	<echo>Creating '${SOURCE_PACKAGE_NAME}' package...</echo>
	<exec executable="/Developer/Tools/packagemaker" failonerror="true">
		<arg line='-build -ds -v'/>
		<arg line='-p ${BUILD_DIR}/metapackage/${SOURCE_PACKAGE_NAME}.pkg'/>
		<arg line='-f ${BUILD_DIR}/${SOURCE_PACKAGE_NAME}'/>
		<arg line='-i ${BUILD_DIR}/${SOURCE_PACKAGE}/Info.plist'/>
		<arg line='-d ${BUILD_DIR}/${SOURCE_PACKAGE}/Description.plist'/>
	</exec>
	<echo>Creating '${RELEASE_NAME}' metapackage...</echo>
	<exec executable="/Developer/Tools/packagemaker" failonerror="true">
		<arg line='-build -ds -v'/>
		<arg line='-p ${IMAGE_CONTENTS}/${MPKG_NAME}'/>
		<arg line='-f ${IMAGE_CONTENTS}'/>
		<arg line='-mi ${BUILD_DIR}/metapackage'/>
		<arg line='-i ${BUILD_DIR}/${META_PACKAGE}/Info.plist'/>
		<arg line='-d ${BUILD_DIR}/${META_PACKAGE}/Description.plist'/>
		<arg line='-r ${BUILD_DIR}/${META_PACKAGE_NAME}'/>
	</exec>
	<echo>Removing old build files...</echo>
	<exec executable="rm" failonerror="true">
		<arg line='-rf'/>
		<arg line='${BUILD_DIR}/${DOCS_PACKAGE_NAME}'/>
		<arg line='${BUILD_DIR}/${FLASH_PACKAGE_NAME}'/>
		<arg line='${BUILD_DIR}/${MAIN_PACKAGE_NAME}'/>
		<arg line='${BUILD_DIR}/${SOURCE_PACKAGE_NAME}'/>
		<arg line='${BUILD_DIR}/${META_PACKAGE_NAME}'/>
		<arg line='${BUILD_DIR}/${PACKAGES_DIR}'/>
		<arg line='${BUILD_DIR}/metapackage'/>
	</exec>
    </target>

    <!-- - - - - - - - - - - - - - - - - - 
            target: release
    - - - - - - - - - - - - - - - - - -->
    <target name="release">
	<echo>Creating disk image...</echo>
	<exec executable="sh" failonerror="true">
		<arg line='${TOOLS_DIR}/make-diskimage.sh "${DIST_DIR}/${DMG_NAME}" "${IMAGE_CONTENTS}" "Red5" ${TOOLS_DIR}/dmg_red5.scpt'/>
	</exec>
	<!-- Dump MD5 checksum for dmg file -->
	<exec executable="md5" failonerror="true">
		<arg line='${DIST_DIR}/${DMG_NAME}'/>
	</exec>
    </target>

</project>
