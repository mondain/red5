<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">
<beans>

    <bean id="placeholderConfig"
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:/red5.properties</value>
            </list>
        </property>
    </bean>


    <!-- Server bean -->
    <bean id="red5.server" class="org.red5.server.Server"/>

    <!-- JMX server -->
    <bean id="jmxFactory" class="org.red5.server.jmx.JMXFactory">
        <property name="domain" value="org.red5.server"/>
    </bean>
    
    <bean id="jmxAgent" class="org.red5.server.jmx.JMXAgent" init-method="init">
        <!-- The RMI adapter allows remote connections to the MBeanServer -->
        <property name="enableRmiAdapter" value="true"/>
        <property name="rmiAdapterPort" value="${jmx.rmi.port.registry}"/>
        <property name="rmiAdapterRemotePort" value="${jmx.rmi.port.remoteobjects}"/>
        <property name="rmiAdapterHost" value="${jmx.rmi.host}"/>
        <property name="enableSsl" value="${jmx.rmi.ssl}"/>
        <!-- Starts a registry if it doesnt exist -->
        <property name="startRegistry" value="true"/>
        <!-- Authentication -->
        <property name="remoteAccessProperties" value="${red5.config_root}/access.properties"/>
        <property name="remotePasswordProperties" value="${red5.config_root}/password.properties"/>
        <property name="remoteSSLKeystore" value="${red5.config_root}/keystore.jmx"/>
        <property name="remoteSSLKeystorePass" value="${rtmps.keystorepass}"/>
        <!-- The HTML adapter allows connections to the MBeanServer via a web browser -->
        <property name="enableHtmlAdapter" value="${jmx.http}"/>
        <property name="htmlAdapterPort" value="${jmx.http.port}"/>
        <!-- Mina offers its own Mbeans so you may integrate them here -->
        <property name="enableMinaMonitor" value="true"/>
    </bean>

    <!-- Thread that writes modified objects to disk periodically -->
    <bean id="filePersistenceThread" class="org.red5.server.persistence.FilePersistenceThread"/>
    
    <!-- Handles creation / lookup of shared objects -->
    <bean id="sharedObjectService" class="org.red5.server.so.SharedObjectService">
        <property name="persistenceClassName">
            <value>org.red5.server.persistence.FilePersistence</value>
        </property>
    </bean>

    <bean id="providerService" class="org.red5.server.stream.ProviderService"/>
    
    <bean id="consumerService" class="org.red5.server.stream.ConsumerService"/>
    
    <bean id="schedulingService" class="org.red5.server.scheduling.QuartzSchedulingService" destroy-method="shutdown"/>

    <!-- Global stuff from red5-default.xml -->
    
    <bean id="global.clientRegistry" class="org.red5.server.ClientRegistry" />
    
    <bean id="global.serviceInvoker" class="org.red5.server.service.ServiceInvoker">
        <property name="serviceResolvers">
            <list>
                <bean id="scopeServiceResolver" class="org.red5.server.service.ScopeServiceResolver"/>
                <bean id="handlerServiceResolver" class="org.red5.server.service.HandlerServiceResolver"/>
                <bean id="contextServiceResolver" class="org.red5.server.service.ContextServiceResolver"/>
            </list>
        </property>
    </bean>
    
    <bean id="global.mappingStrategy" class="org.red5.server.MappingStrategy" />
    
    <bean id="global.context" class="org.red5.server.Context" autowire="byType" />

    <bean id="global.handler" class="org.red5.server.CoreHandler" autowire="byType" />
            
    <bean id="global.scope" class="org.red5.server.GlobalScope" init-method="register">
        <property name="server" ref="red5.server" />
        <property name="name" value="default" />
        <property name="context" ref="global.context" />
        <property name="handler" ref="global.handler" />
        <property name="persistenceClass" value="org.red5.server.persistence.RamPersistence" /> 
    </bean>
    
    <bean id="red5.scopeResolver" class="org.red5.server.ScopeResolver">
        <property name="globalScope" ref="global.scope" />
    </bean>    
    
    <!-- Application stuff from red5-web.xml -->    
    
    <bean id="web.context" class="org.red5.server.Context" autowire="byType" />

    <bean id="web.scope" class="org.red5.server.WebScope" init-method="register">
        <property name="server" ref="red5.server" />
        <property name="parent" ref="global.scope" />
        <property name="context" ref="web.context" />
        <property name="handler" ref="web.handler" />
        <property name="persistenceClass" value="org.red5.server.persistence.RamPersistence" /> 
        <property name="contextPath" value="/junit" />
        <property name="virtualHosts" value="*" />
    </bean>    
    
    <bean id="web.handler" class="org.red5.server.adapter.ApplicationAdapter" />
    
</beans>
