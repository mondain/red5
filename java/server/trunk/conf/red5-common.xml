<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">
<beans>

	<!-- This context is shared between all child contexts. -->

	<bean id="red5.server" class="org.red5.server.Server"  />

	<bean id="serializer" class="org.red5.io.object.Serializer" />
	
	<bean id="deserializer" class="org.red5.io.object.Deserializer" />
	
	<bean id="statusObjectService" class="org.red5.server.net.rtmp.status.StatusObjectService" 
		autowire="byType" init-method="initialize" />
	
	<bean id="rtmpCodecFactory" class="org.red5.server.net.rtmp.codec.RTMPMinaCodecFactory" 
		autowire="byType" init-method="init" />
		
	<bean id="remotingCodecFactory" class="org.red5.server.net.remoting.codec.RemotingCodecFactory" 
		autowire="byType" init-method="init" />
	
	<bean id="videoCodecFactory" class="org.red5.server.stream.VideoCodecFactory">
		<property name="codecs">
			<list>
				<bean id="screenVideoCodec" class="org.red5.server.stream.codec.ScreenVideo"/>
				<bean id="sorensonVideoCodec" class="org.red5.server.stream.codec.SorensonVideo"/>
			</list>
		</property>
	</bean>
    
	<bean id="streamableFileFactory" class="org.red5.io.StreamableFileFactory">
		<property name="services">
			<list>
				<bean id="flvFileService" class="org.red5.io.flv.impl.FLVService"/>
				<bean id="mp3FileService" class="org.red5.io.mp3.impl.MP3Service"/>
			</list>
		</property>
	</bean>
    
    <!-- handles creation / lookup of shared objects -->
    <bean id="sharedObjectService" class="org.red5.server.so.SharedObjectService">
        <property name="persistenceClassName">
            <value>org.red5.server.persistence.FilePersistence</value>
        </property>
    </bean>
    
    <!-- high level access to streams -->
    <bean id="streamService" class="org.red5.server.stream.StreamServiceNew" />
    
    <!-- handles broadcast streams -->
    <bean id="broadcastStreamService" class="org.red5.server.stream.StreamManager" />
    
    <!-- handles on-demand streams -->
    <bean id="onDemandStreamService" class="org.red5.server.stream.StreamManager" />
    
    <!-- handles subsciber streams of broadcasts -->
    <bean id="subscriberStreamService" class="org.red5.server.stream.StreamManager" />
    
    <bean id="providerService" class="org.red5.server.stream.ProviderService" />
    
    <bean id="consumerService" class="org.red5.server.stream.ConsumerService" />
    
    <bean id="schedulingService" class="org.red5.server.scheduling.QuartzSchedulingService" />
</beans>
