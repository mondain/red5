<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">
<beans>

    <!-- Use this to configure Tomcat via Spring -->
    
    <!-- This Realm uses the UserDatabase configured in the global JNDI
        resources under the key "UserDatabase". Any edits that are performed
        against this UserDatabase are immediately available for use by the Realm. -->
    <bean id="realm" class="org.apache.catalina.realm.UserDatabaseRealm">
        <property name="resourceName">
            <bean id="UserDatabase" class="org.apache.catalina.UserDatabase">
                <!-- User database that can be updated and saved -->
                <property name="auth" value="Container" />
                <property name="factory" value="org.apache.catalina.users.MemoryUserDatabaseFactory" />
                <property name="pathname" value="conf/tomcat-users.xml" />             
            </bean>
        </property>
    </bean>            

    <!-- Comment out the old realm but leave here for now in case we
       need to go back quickly -->
    <!--
    <bean id="realm" class="org.apache.catalina.realm.MemoryRealm" />
    -->
      
    <!-- Replace the above Realm with one of the following to get a Realm
       stored in a database and accessed via JDBC -->
    <!--
    <bean id="realm" class="org.apache.catalina.realm.JDBCRealm">
        <property name="driverName">
            <bean id="UserDatabase" class="org.gjt.mm.mysql.Driver">
                <property name="connectionURL" value="jdbc:mysql://localhost/authority" />
                <property name="connectionName" value="test" />
                <property name="connectionPassword" value="test" />
                <property name="userTable" value="users" />
                <property name="userNameCol" value="user_name" />
                <property name="userCredCol" value="user_pass" />             
                <property name="userRoleTable" value="user_roles" />             
                <property name="roleNameCol" value="role_name" />             
			</bean>
        </property>
    </bean>  
    -->      
      
	<!-- ================ Connectors ================ -->      
    <!-- Define a non-SSL HTTP/1.1 Connector on port 8080 -->
	<bean id="connector.http" class="org.apache.catalina.connector.http.HttpConnector">
        <property name="port"><value>${http.port}</value></property>
        <property name="maxHttpHeaderSize" value="8192" />
        <property name="maxThreads" value="150" />
        <property name="minSpareThreads" value="25" />
        <property name="maxSpareThreads" value="75" />
        <property name="enableLookups" value="false" />
        <property name="redirectPort" value="8443" />
        <property name="acceptCount" value="100" />
        <!-- Note : To disable connection timeouts, set connectionTimeout value to 0 -->
        <property name="connectionTimeout" value="20000" />
        <property name="disableUploadTimeout" value="true" />
        <!-- Note : To use gzip compression you could set the following properties :
            <property name="compression" value="on" />
            <property name="compressionMinSize" value="2048" />
			<property name="noCompressionUserAgents"><value>gozilla, traviata</value></property> 
			 <property name="compressableMimeType"><value>text/html,text/xml</value></property>
	    -->
	</bean>

    <!-- Define a SSL HTTP/1.1 Connector on port 8443 -- >
	<bean id="connector.https" class="org.apache.catalina.connector.http.HttpConnector">
        <property name="port"><value>${https.port}</value></property>
        <property name="maxHttpHeaderSize"><value>8192</value></property>
        <property name="maxThreads"><value>150</value></property>
        <property name="minSpareThreads"><value>25</value></property>
        <property name="maxSpareThreads"><value>75</value></property>
        <property name="enableLookups"><value>false</value></property>
        <property name="acceptCount"><value>100</value></property>
        <property name="scheme"><value>https</value></property>
        <property name="secure"><value>true</value></property>
        <property name="clientAuth"><value>false</value></property>
        <property name="sslProtocol"><value>TLS</value></property>
        <!-- Note : To disable connection timeouts, set connectionTimeout value to 0 -- >
        <property name="connectionTimeout"><value>20000</value></property>
        <property name="disableUploadTimeout"><value>true</value></property>
        <!-- Note : To use gzip compression you could set the following properties :
            <property name="compression"><value>on</value></property>
            <property name="compressionMinSize"><value>2048"/value></property>
			<property name="noCompressionUserAgents"><value>gozilla, traviata</value></property> 
			 <property name="compressableMimeType"><value>text/html,text/xml</value></property>
	    -- >
	</bean>	    
	-->

    <!-- Define an AJP 1.3 Connector on port 8009 -->
    <!--
	<bean id="connector.ajp" class="org.apache.coyote.tomcat5.CoyoteConnector">
        <property name="port"><value>${ajp.port}</value></property>
        <property name="maxHttpHeaderSize" value="8192" />
        <property name="maxThreads" value="150" />
        <property name="minSpareThreads" value="25" />
        <property name="maxSpareThreads" value="75" />
        <property name="enableLookups" value="false" />
        <property name="redirectPort" value="8443" />
        <property name="acceptCount" value="100" />
        <property name="protocol"><value>AJP/1.3</value></property>
        <property name="protocolHandlerClassName">
            <bean class="org.apache.jk.server.JkCoyoteHandler" />
        </property>
        <!-- Note : To disable connection timeouts, set connectionTimeout value to 0 -- >
        <property name="connectionTimeout" value="20000" />
        <property name="disableUploadTimeout" value="true" />
	</bean>	   
    -->
    
    <!-- ================ Engines ================ -->
    <!-- You should set jvmRoute to support load-balancing via AJP ie :
	<bean id="engine.standalone" class="org.apache.catalina.core.StandardEngine">
        <property name="defaultHost" value="localhost" />
        <property name="jvmRoute" value="jvm1" />
	</bean>	   
    --> 
  
    <!-- Define the top level container in our container hierarchy -->
	<bean id="engine.default" class="org.apache.catalina.core.StandardEngine">
        <property name="defaultHost" value="localhost" />
        <bean id="localhost" class="org.apache.catalina.core.StandardHost">
            <property name="name" value="${http.host}" />
            <property name="appBase" value="${red5.root}/webapps" />
            <property name="unpackWARs" value="true" />
            <property name="autoDeploy" value="true" />
            <property name="xmlValidation" value="false" />
            <property name="xmlNamespaceAware" value="false" />
        <!--
            <bean id="valve.access" class="org.apache.catalina.valves.AccessLogValve">
                 <property name="directory" value="logs" />
                 <property name="prefix" value="localhost_access_log." />
                 <property name="suffix" value=".txt" />
                 <property name="pattern" value="common"" />
                 <property name="resolveHosts" value="false"/>
            </bean>
        -->
        </bean>	   
	</bean>	   
   
</beans>
