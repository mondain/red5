<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">
<beans>

	<bean id="placeholderConfig"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="/WEB-INF/red5-web.properties" />
	</bean>

	<bean id="web.context" class="org.red5.server.Context"
		autowire="byType" />

	<bean id="web.scope" class="org.red5.server.WebScope"
		init-method="register">
		<property name="server" ref="red5.server" />
		<property name="parent" ref="global.scope" />
		<property name="context" ref="web.context" />
		<property name="handler" ref="web.handler" />
		<property name="contextPath" value="${webapp.contextPath}" />
		<property name="virtualHosts" value="${webapp.virtualHosts}" />
	</bean>

	<bean id="web.handler" class="org.red5.demos.security.Application"
		singleton="true" />

	<!-- this will support calling methods through "myhandler.<methodName>" 
		<bean id="myhandler.service" 
		class="the.path.to.my.ServiceHandler" 
		singleton="true" />
	-->
	
	<bean id="test" class="org.apache.log4j.Level">
		<constructor-arg><value>1</value></constructor-arg>
		<constructor-arg><value>1</value></constructor-arg>
		<constructor-arg><value>1</value></constructor-arg>
	</bean>
	
		
	<bean id="userDetailssService"
		class="org.acegisecurity.userdetails.memory.InMemoryDaoImpl">
		<property name="userMap">
			<value>
				manager=manager,ROLE_MANAGER 
			</value>
		</property>
	</bean>
	<!-- 
		normally you would use jdbcDaoImpl instead of InMemoryDaoImpl 
	-->
	<!-- <bean id="securityDataSource" 
		class="org.springframework.jdbc.datasource.DriverManagerDataSource"> 
		<property name="driverClassName" value="com.mysql.jdbc.Driver"/> 
		<property name="url" value="jdbc:mysql://localhost/acegi?autoReconnect=true"/> 
		<property name="username" value="root"/> 
		<property name="password" value=""/> 
		</bean> 
		<bean id="jdbcDaoImpl" 
		class="org.acegisecurity.userdetails.jdbc.JdbcDaoImpl"> 
		<property name="dataSource"> 
		<ref bean="securityDataSource"/> 
		</property> 
		</bean>-->
	
	<bean id="authenticationProvider"
		class="org.acegisecurity.providers.dao.DaoAuthenticationProvider">
		<property name="userDetailsService" ref="userDetailssService" />
	</bean>
	
	<bean id="authenticationManager"
		class="org.acegisecurity.providers.ProviderManager">
		<property name="providers">
			<list>
				<ref bean="authenticationProvider" />
			</list>
		</property>
	</bean>

	
	<bean id="roleVoter" class="org.acegisecurity.vote.RoleVoter" />
	
	
	<bean id="autoProxyCreator"
		class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
		<property name="interceptorNames">
			<list>
				<value>securityInterceptor</value>
			</list>
		</property>
		<property name="beanNames">
			<list>
				<value>web.handler</value>
			</list>
		</property>
		<property name="proxyTargetClass" value="true" />
	</bean>
	 
	<bean id="accessDecisionManager"
		class="org.acegisecurity.vote.AffirmativeBased">
		<property name="decisionVoters">
			<list>
				<ref bean="roleVoter" />
			</list>
		</property>
	</bean>

	<bean id="securityInterceptor"
		class="org.acegisecurity.intercept.method.aopalliance.MethodSecurityInterceptor"
		abstract="false" singleton="true" lazy-init="default" autowire="default" dependency-check="default">
		<property name="authenticationManager"
			ref="authenticationManager" />
		<property name="accessDecisionManager"
			ref="accessDecisionManager" />
		<property name="rejectPublicInvocations" value="false"></property>
		<property name="objectDefinitionSource">
			<value>org.red5.demos.security.Application.appConnect=ROLE_MANAGER</value>
		</property>
	</bean>

	


</beans>
