<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" 
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.3.xsd">   
 
    <bean id="userDetailsService" class="org.springframework.security.provisioning.JdbcUserDetailsManager" depends-on="dataSource" lazy-init="true">
        <property name="dataSource" ref="dataSource"/>
        <property name="enableGroups" value="false"/>
        <property name="authenticationManager" ref="authenticationManager"/>
        
        <property name="usersByUsernameQuery" value="SELECT username,password,enabled FROM APPUSER WHERE username = ?"/>
        <property name="authoritiesByUsernameQuery" value="SELECT username,authority FROM APPROLE WHERE username = ?"/>
      
        <property name="createAuthoritySql" value="INSERT INTO APPROLE (username, authority) VALUES (?, ?)"/>
        <property name="createUserSql" value="INSERT INTO APPUSER (username, password, enabled) VALUES (?, ?, ?)"/>
        <property name="deleteUserSql" value="DELETE FROM APPUSER,APPROLE WHERE username = ?"/>
        <property name="updateUserSql" value="UPDATE APPUSER SET password = ?, enabled = ? WHERE username = ?"/>
        <property name="userExistsSql" value="SELECT username FROM APPUSER WHERE username = ?"/>
        <property name="changePasswordSql" value="UPDATE APPUSER SET password = ? WHERE username = ?"/>
    </bean>
         
    <bean id="daoAuthenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider" depends-on="userDetailsService">
        <property name="userDetailsService" ref="userDetailsService"/>
    </bean>

    <bean id="authenticationManager" class="org.springframework.security.authentication.ProviderManager">
        <property name="providers">
            <list>
                <ref local="daoAuthenticationProvider"/>
            </list>
        </property>
    </bean>
    
    <bean id="userDatabase" class="org.red5.webapps.admin.UserDatabase" init-method="init" destroy-method="shutdown">
        <property name="driverClass" value="org.h2.Driver"/>
        <property name="jdbcUrl" value="jdbc:h2:admin"/>
    </bean>

    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="org.h2.Driver" />
        <property name="url" value="jdbc:h2:admin" />
    </bean>

</beans>
