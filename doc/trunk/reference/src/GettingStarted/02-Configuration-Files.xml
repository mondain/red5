<?xml version='1.0' ?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xl="http://www.w3.org/1999/xlink" version="5.0" xml:id="ConfigurationFiles">
	<title>Configuration Files</title>
	<section xml:id="ConfigurationFilesDirectoryconf">
		<title>Directory "conf"</title>
		<section xml:id="ConfigurationFilesjetty.xml">
			<title>jetty.xml</title>
			<para>The settings of the HTTP server and servlet container are specified using this file. It runs on 
				all available interfaces on port 5080 by default. </para>
			<para>See the Jetty homepage 
				<link xl:href="http://jetty.mortbay.org/jetty6/">http://jetty.mortbay.org/jetty6/</link> for further information about the 
				syntax of this file. 
			</para>
		</section>
		<section xml:id="ConfigurationFileskeystore">
			<title>keystore</title>
			<para>Contains a sample private key and certificate to be used for secure connections. </para>
		</section>
		<section xml:id="ConfigurationFileslog4j.properties">
			<title>log4j.properties</title>
			<para>Controls the log levels and output handlers for the logging subsystem. </para>
			<para>Further information about log4j can be found on the official homepage 
				<link xl:href="http://logging.apache.org/log4j/docs/">http://logging.apache.org/log4j/docs/</link>. 
			</para>
		</section>
		<section xml:id="ConfigurationFilesrealm.propertiesJetty">
			<title>realm.properties (Jetty)</title>
			<para>This file defines users passwords and roles that can be used for protected areas. </para>
			<para>The format is: </para>
			<literallayout>
 &lt;username>: &lt;password>[,&lt;rolename> ...] 
</literallayout>
			<para>Passwords may be clear text, obfuscated or checksummed. The class 
				"org.mortbay.util.Password" should be used to generate obfuscated passwords or 
				password checksums </para>
		</section>
		<section xml:id="ConfigurationFilestomcatusers.xmlTomcat">
			<title>tomcat-users.xml (Tomcat)</title>
			<para>This file defines users passwords and roles that can be used for protected areas.</para>
			<para>The format is: </para>
			<programlisting language="xml">
<![CDATA[

<user name="<username>" password="<password>" roles="[,<rolename> ...]" /> 
]]>
</programlisting>
			<para>Passwords may be clear text, obfuscated or checksummed. For information on different 
				digest support or available realm implementations use the how-to: 
				<link xl:href="http://tomcat.apache.org/tomcat-5.5-doc/realm-howto.html">http://tomcat.apache.org/tomcat-5.5-doc/realm-howto.html</link> 
			</para>
			<para>Further information about tomcat realms can be found on the official homepage 
				<link xl:href="http://tomcat.apache.org/tomcat-5.5-doc/catalina/docs/api/org/apache/catalina/realm/package-summary.html">http://tomcat.apache.org/tomcat-5.5-doc/catalina/docs/api/org/apache/catalina/realm/package-summary.html</link> 
			</para>
		</section>
		<section xml:id="ConfigurationFilesred5.globals">
			<title>red5.globals</title>
			<para>Specifies the path to the configuration file for the default global context to be used for Red5. </para>
			<para>By default this file is located in "/webapps/red5-default.xml". </para>
		</section>
		<section xml:id="ConfigurationFilesred5.properties">
			<title>red5.properties</title>
			<para>File containing key / value pairs to configure the host and port of basic services like RTMP 
				or remoting. </para>
		</section>
		<section xml:id="ConfigurationFilesred5.xml">
			<title>red5.xml</title>
			<para>The main configuration file that wires together the context tree. It takes care of loading 
				"red5-common.xml" and "red5-core.xml" and sets up the rest of the server. This is the 
				first file to be loaded by Red5. The J2EE container is selected in this configuration file by 
				configuring one of the following bean elements. </para>
			<itemizedlist>
				<listitem>
					<para>Jetty </para>
				</listitem>
			</itemizedlist>
			<programlisting language="xml">
<![CDATA[

<bean id="jetty6.server" class="org.red5.server.JettyLoader" init-method="init" autowire="byType" />
]]>
</programlisting>
			<itemizedlist>
				<listitem>
					<para>Tomcat</para>
				</listitem>
			</itemizedlist>
			<programlisting language="xml">
<![CDATA[

<bean id="tomcat.server" class="org.red5.server.TomcatLoader" init-method="init" destroy-method="shutdown">
   ... cut for brevity ... 
</bean> 
]]>
</programlisting>
		</section>
		<section xml:id="ConfigurationFilesred5common.xml">
			<title>red5-common.xml</title>
			<para>Classes that are shared between all child contexts are declared in this file. It contains 
				information about the object serializers / deserializers, the codecs to be used for the 
				network protocols as well as the available video codecs.
				Configuration files used by Red5 </para>
			<para>The object (FLV) cache is configured / spring-wired in this file. Four implementations are 
				currently available; The first one is our own creation (simple byte-buffers) and the others 
				use WhirlyCache, or Ehcache. If no caching is desired then the NoCache implementation 
				should be specified like so: </para>
			<programlisting language="xml">
<![CDATA[

<bean id="object.cache" class="org.red5.server.cache.NoCacheImpl"/> 
]]>
</programlisting>
			<para>The other bean configurations are as follows (Only one may be used at a time): </para>
			<itemizedlist>
				<listitem>
					<para>Red5 homegrown simple example </para>
				</listitem>
			</itemizedlist>
			<programlisting language="xml">
<![CDATA[

<bean id="object.cache" class="org.red5.server.cache.CacheImpl" init-method="init" autowire="byType">
   <property name="maxEntries"><value>5</value></property> 
</bean> 
]]>
</programlisting>
			<itemizedlist>
				<listitem>
					<para>EhCache 
						<link xl:href="http://ehcache.sourceforge.net/">http://ehcache.sourceforge.net/</link> 
					</para>
				</listitem>
			</itemizedlist>
			<programlisting language="xml">
<![CDATA[

         <bean id="object.cache" class="org.red5.server.cache.EhCacheImpl" init-method="init"> 
            <property name="diskStore" value="java.io.tmpdir" /> 
            <property name="memoryStoreEvictionPolicy" value="LFU" /> 
            <property name="cacheManagerEventListener"><null/></property>  
            <property name="cacheConfigs"> 
               <list> 
                  <bean class="net.sf.ehcache.config.CacheConfiguration"> 
                     <property name="name" value="flv.cache" /> 
                     <property name="maxElementsInMemory" value="5" /> 
                     <property name="eternal" value="false" /> 
                     <property name="timeToIdleSeconds" value="0" /> 
                     <property name="timeToLiveSeconds" value="0" /> 
                     <property name="overflowToDisk" value="false" /> 
                     <property name="diskPersistent" value="false" /> 
                  </bean>   
               </list> 
            </property> 
         </bean>  
]]>
</programlisting>
			<itemizedlist>
				<listitem>
					<para>Whirlycache 
						<link xl:href="https://whirlycache.dev.java.net/">https://whirlycache.dev.java.net/</link> 
					</para>
				</listitem>
			</itemizedlist>
			<programlisting language="xml">
<![CDATA[

<bean id="object.cache" class="org.red5.server.cache.WhirlyCacheImpl" init-method="init" autowire="b 
<property name="maxEntries" value="5" /> 
<property name="cacheConfig"> 
<bean class="com.whirlycott.cache.CacheConfiguration"> 
<property name="name" value="flv.cache" /> 
<property name="maxSize" value="5" /> 
<!-- This policy removes cached items, biased towards least frequently used (LFU) Items --> 
<property name="policy"><value>com.whirlycott.cache.policy.LFUMaintenancePolicy</value></property> 
<!-- This policy removes cached items, biased towards least recently used (LRU) Items --> 
<!-- property name="policy"><value>com.whirlycott.cache.policy.LRUMaintenancePolicy</value></propert 
<!-- This policy removes cache items in the order in which they were added -->
Configuration files used by Red5 
<!-- property name="policy"><value>com.whirlycott.cache.policy.FIFOMaintenancePolicy</value></proper 
<!-- A predicate for filtering Collections of Items based on their expiration time --> 
<!-- property name="policy"><value>com.whirlycott.cache.policy.ExpirationTimePredicate</value></prop 
<!-- property name="backend"><value>com.whirlycott.cache.impl.ConcurrentHashMapImpl</value></propert 
<property name="backend"><value>com.whirlycott.cache.impl.FastHashMapImpl</value></property> 
</bean>   
]]>
</programlisting>
		</section>
		<section xml:id="ConfigurationFilesred5core.xml">
			<title>red5-core.xml</title>
			<para>All available network services are specified here. By default these are RTMP and RTMPT. 
				The actual settings for the RTMPT server can be found in "red5-rtmpt.xml" when using 
				Jetty as the J2EE container. The RTMPT handler is selected by configuring one of the 
				following bean elements. </para>
			<itemizedlist>
				<listitem>
					<para>Jetty</para>
				</listitem>
			</itemizedlist>
			<programlisting language="xml">
<![CDATA[

<bean id="rtmpt.server" class="org.red5.server.net.rtmpt.RTMPTLoader" init-method="init" autowire="bType"/>
]]>
</programlisting>
			<itemizedlist>
				<listitem>
					<para>Tomcat</para>
				</listitem>
			</itemizedlist>
			<programlisting language="xml">
<![CDATA[

<bean id="rtmpt.server" class="org.red5.server.net.rtmpt.TomcatRTMPTLoader" init-method="init" autowire="bType"> 
   ... cut for brevity ... 
</bean> 
]]>
</programlisting>
		</section>
		<section xml:id="ConfigurationFilesred5rtmpt.xml">
			<title>red5-rtmpt.xml</title>
			<para>Sets up the mapping between the RTMPT URLs and the servlets to use as well as specify 
				the host and port to run on. By default the RTMPT server runs on all available interfaces on 
				port 8088. </para>
			<para>See the Jetty homepage 
				<link xl:href="http://jetty.mortbay.org/jetty6/">http://jetty.mortbay.org/jetty6/</link> for further information about the 
				syntax of this file. 
			</para>
		</section>
		<section xml:id="ConfigurationFilesweb.xmlTomcat">
			<title>web.xml (Tomcat)</title>
			<para>Default web.xml file used by Tomcat. The settings from this file are applied to a web 
				application before it's own WEB_INF/web.xml file. Further info about the configuration 
				of this file may be found here: 
				<link xl:href="http://tomcat.apache.org/tomcat-5.5-doc/jasper-howto.html#Configuration">http://tomcat.apache.org/tomcat-5.5-doc/jasper-howto.html#Configuration</link> 
			</para>
		</section>
		<section xml:id="ConfigurationFileswebdefault.xmlJetty">
			<title>web-default.xml (Jetty)</title>
			<para>Default web.xml file used by Jetty. The settings from this file are applied to a web 
				application before it's own WEB_INF/web.xml file.</para>
		</section>
	</section>
	<section xml:id="ConfigurationFilesWebappconfigdirectory">
		<title>Webapp config directory</title>
		<section xml:id="ConfigurationFilesred5web.xml">
			<title>red5-web.xml</title>
			<para>Red5 applications are configured within this file. The scripting implementations or Java 
				applications are configured via Spring bean elements. </para>
			<itemizedlist>
				<listitem>
					<para>Java Application</para>
				</listitem>
			</itemizedlist>
			<programlisting language="xml">
<![CDATA[

<bean id="web.handler" class="org.red5.server.webapp.oflaDemo.Application" singleton="true" />  
]]>
</programlisting>
			<itemizedlist>
				<listitem>
					<para>Javascript / Rhino application </para>
				</listitem>
			</itemizedlist>
			<programlisting language="xml">
<![CDATA[

<bean id="web.handler" class="org.red5.server.script.rhino.RhinoScriptFactory"> 
   <constructor-arg index="0" value="classpath:applications/main.js"/> 
   <!-- Implemented interfaces --> 
   <constructor-arg index="1"> 
      <list> 
         <value>org.red5.server.api.IScopeHandler</value> 
         <value>org.red5.server.adapter.IApplication</value> 
      </list> 
   </constructor-arg> 
   <!-- Extended class --> 
   <constructor-arg index="2"> 
      <value>org.red5.server.adapter.ApplicationAdapter</value> 
   </constructor-arg> 
</bean> 
]]>
</programlisting>
			<itemizedlist>
				<listitem>
					<para>Ruby application </para>
				</listitem>
			</itemizedlist>
			<programlisting language="xml">
<![CDATA[

<bean id="web.handler" class="org.red5.server.script.jruby.JRubyScriptFactory"> 
   <constructor-arg index="0" value="classpath:applications/main.rb"/> 
   <constructor-arg index="1"> 
      <list> 
         <value>org.red5.server.api.IScopeHandler</value> 
         <value>org.red5.server.adapter.IApplication</value> 
      </list> 
   </constructor-arg> 
</bean> 
]]>
</programlisting>
		</section>
	</section>
</chapter>