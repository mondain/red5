<?xml version='1.0' ?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xl="http://www.w3.org/1999/xlink" version="5.0" xml:id="BuildingRed5">
	<title>Building Red5</title>
	<section xml:id="BuildingRed5BuildEnvironmentSetup">
		<title>Build Environment Setup</title>
		<section xml:id="BuildingRed5Ant">
			<title>Ant</title>
			<para>Apache Ant 1.7 and above is required for building the Red5 project source code. 
				download here 
				<link xl:href="http://archive.apache.org/dist/ant/binaries/">http://archive.apache.org/dist/ant/binaries/</link> 
			</para>
			<para>The path to the ant binary must be on your system PATH environment variable (test by 
				typing ant -version at a system prompt) defined, typically </para>
			<literallayout>
PATH=$PATH:/usr/local/ant 
</literallayout>
			<para>You can check this on windows by typing set PATH or on unix by typing echo $PATH </para>
		</section>
		<section xml:id="BuildingRed5Java">
			<title>Java</title>
			<para>Java 1.5 or 1.6 and above is required for running ant, compiling the source and running the 
				Red5 server. </para>
			<para>Download Java 5 
				<link xl:href="http://java.sun.com/j2se/1.5.0/download.html">http://java.sun.com/j2se/1.5.0/download.html</link> 
			</para>
			<para>Download Java 6 
				<link xl:href="http://java.sun.com/j2se/1.6.0/download.html">http://java.sun.com/j2se/1.6.0/download.html</link> 
			</para>
			<para>You must have the environment variables for JAVA_HOME and JAVA_VERSION defined, 
				typically </para>
			<literallayout>
JAVA_HOME=C:\development\j2sdk\1.5.0_07 JAVA_VERSION=1.5 You can check this on 
windows by typing set JAVA_HOME or on unix by typing echo $JAVA_HOME 
</literallayout>
		</section>
		<section xml:id="BuildingRed5Red5">
			<title>Red5</title>
			<para>You must have the environment variables for RED5_HOME defined, 
				typically </para>
			<literallayout>
RED5_HOME=/www/red5_server
</literallayout>
			<warning>
<para>
				 
				FAILURE TO SETUP YOUR ENVIRONMENT VARIABLES WILL PREVENT YOUR FROM BEING ABLE TO BUILD PROPERLY

</para>
</warning>
			<note>
<para>
				 
				You don't need netbeans or eclipse unless you need an IDE for java. 

				Download Netbeans here [http://www.netbeans.org] 

				Download Eclipse here [http://www.eclipse.org]

</para>
</note>
		</section>
	</section>
	<section xml:id="BuildingRed5Building">
		<title>Building</title>
		<section xml:id="BuildingRed5GettingRed5Source">
			<title>Getting Red5 Source</title>
			<para>The Red5 source code is available at the 
				<link xl:href="http://code.google.com/p/red5/">google code project page</link> and svn repository.
			</para>
			<orderedlist>
				<listitem>
					<para>With your favourite SVN client check out the source code from svn at this address 
						<link xl:href="http://red5.googlecode.com/svn/java/server/trunk/">http://red5.googlecode.com/svn/java/server/trunk/</link> or 
						<link xl:href="https://red5.googlecode.com/svn/java/server/trunk/">https://red5.googlecode.com/svn/java/server/trunk/</link> if you have a google code login.
					</para>
				</listitem>
				<listitem>
					<para>Team members will be added to the google code project group and in your google code login you will find the svn password for committing changes at this address 
						<link xl:href="http://code.google.com/hosting/settings">http://code.google.com/hosting/settings</link>. 
					</para>
				</listitem>
			</orderedlist>
		</section>
		<section xml:id="BuildingRed5GettingRed5DemoApplicationsSource">
			<title>Getting Red5 Demo Applications Source</title>
			<orderedlist>
				<listitem>
					<para>With your favourite SVN client check out the source code from svn at this address 
						<link xl:href="http://red5.googlecode.com/svn/java/example/trunk/">http://red5.googlecode.com/svn/java/example/trunk/</link> or 
						<link xl:href="https://red5.googlecode.com/svn/java/example/trunk/">https://red5.googlecode.com/svn/java/example/trunk/</link> if you have a google code login.
					</para>
				</listitem>
			</orderedlist>
		</section>
		<section xml:id="BuildingRed5GettingRed5FlashDemoSource">
			<title>Getting Red5 Flash Demo Source</title>
			<orderedlist>
				<listitem>
					<para>With your favourite SVN client check out the source code from svn at this address 
						<link xl:href="http://red5.googlecode.com/svn/flash/trunk/">http://red5.googlecode.com/svn/flash/trunk/</link> or 
						<link xl:href="https://red5.googlecode.com/svn/flash/trunk/">https://red5.googlecode.com/svn/flash/trunk/</link> if you have a google code login.
					</para>
				</listitem>
			</orderedlist>
		</section>
		<section xml:id="BuildingRed5Runningtheantbuild">
			<title>Running the ant build</title>
			<para>To build the red5 source simply run the following command from the command line inside 
				the red5 source directory. </para>
			<literallayout>
ant dist 
</literallayout>
		</section>
		<section xml:id="BuildingRed5CurrentAntTargets">
			<title>Current Ant Targets</title>
			<itemizedlist>
				<listitem>
					<para>all - Runs clean, prepare, compile, jar, javadoc targets</para>
				</listitem>
				<listitem>
					<para>bootstrap - Compile and start the server using the bootstrap class</para>
				</listitem>
				<listitem>
					<para>checkout - checks out the Red5 server source (requires svnant.jar)</para>
				</listitem>
				<listitem>
					<para>checkout-all - checks out the entire Red5 project sources from the root level to a specified directory</para>
				</listitem>
				<listitem>
					<para>clean - cleans up all the files and directories</para>
				</listitem>
				<listitem>
					<para>compile - Compiles Red5</para>
				</listitem>
				<listitem>
					<para>compile_core - Build Red5 server sources and downloads java 6 dependancies</para>
				</listitem>
				<listitem>
					<para>compile_core_compatibility - Build Red5 server sources and downloads java 5 dependancies</para>
				</listitem>
				<listitem>
					<para>compile_demos - Copies over the root and installer webapp</para>
				</listitem>
				<listitem>
					<para>compile_script - Compiles scripting sources</para>
				</listitem>
				<listitem>
					<para>compile_tests - Compiles junit test classes</para>
				</listitem>
				<listitem>
					<para>compile_war - Compiles Red5 into a war distribution</para>
				</listitem>
				<listitem>
					<para>console - launches a non-SSL jconsole for managing Red5 in JMX.</para>
				</listitem>
				<listitem>
					<para>console-ssl - launches a SSL jconsole for managing Red5 in JMX with SSL enabled.</para>
				</listitem>
				<listitem>
					<para>doc-all - Generate docbook documentation for html-single, multi html and pdf.</para>
				</listitem>
				<listitem>
					<para>doc-clean - Cleans the docbook files.</para>
				</listitem>
				<listitem>
					<para>doc-html - Compile reference documentation to chunked html.</para>
				</listitem>
				<listitem>
					<para>doc-htmlsingle - Compile reference documentation to single html.</para>
				</listitem>
				<listitem>
					<para>doc-pdf - Compile reference documentation to pdf.</para>
				</listitem>
				<listitem>
					<para>doc-prepare - Extra preparation for the documentation.</para>
				</listitem>
				<listitem>
					<para>dist - Make Binary distribution.</para>
				</listitem>
				<listitem>
					<para>dist-archive - Create archive file for distribution.</para>
				</listitem>
				<listitem>
					<para>dist-cluster - Create Edge/Origin distribution.</para>
				</listitem>
				<listitem>
					<para>dist-debian - Create Debian package.</para>
				</listitem>
				<listitem>
					<para>dist-edge - Builds a Red5 edge distribution.</para>
				</listitem>
				<listitem>
					<para>dist-origin - Builds a Red5 origin distribution.</para>
				</listitem>
				<listitem>
					<para>dist-installer - Make Installer distribution.</para>
				</listitem>
				<listitem>
					<para>dist-macosx - Create Mac OSX installer.</para>
				</listitem>
				<listitem>
					<para>dist-windows - Create Windows installer.</para>
				</listitem>
				<listitem>
					<para>dist-redhat - Create Redhat installer.</para>
				</listitem>
				<listitem>
					<para>ivyclear - Clears out the Ivy cache.</para>
				</listitem>
				<listitem>
					<para>jar-determine-classpath - Determine classpath for jar file.</para>
				</listitem>
				<listitem>
					<para>jar - Make Archive.</para>
				</listitem>
				<listitem>
					<para>javadoc - Generate JavaDoc.</para>
				</listitem>
				<listitem>
					<para>java6.check - Checks for Java 6. </para>
				</listitem>
				<listitem>
					<para>prepare - Prepares for building Red5.</para>
				</listitem>
				<listitem>
					<para>server - Compile and start the server.</para>
				</listitem>
				<listitem>
					<para>shutdown - Shuts down the running Red5 instance.</para>
				</listitem>
				<listitem>
					<para>udp_server - Compile and start experimental UDP server.</para>
				</listitem>
				<listitem>
					<para>run-tests - Run JUnit tests and generate HTML reports.</para>
				</listitem>
				<listitem>
					<para>run-tests-systemtest - Runs some end-to-end system tests against a test server using a flash client.</para>
				</listitem>
				<listitem>
					<para>run-tests-server - Run the selftest server.</para>
				</listitem>
				<listitem>
					<para>svn-add - Add files to svn.</para>
				</listitem>
				<listitem>
					<para>remotejar - Creates a jar that may be deployed with remote applications.</para>
				</listitem>
				<listitem>
					<para>retrieve - Retrieves the libraries if needed.</para>
				</listitem>
				<listitem>
					<para>rtmps_keystore - Creates the keystore file in the conf directory required by RTMPS.</para>
				</listitem>
				<listitem>
					<para>truststore - Creates a duplicate keystore file and generates a truststore file for jconsole SSL connections.</para>
				</listitem>
				<listitem>
					<para>upload-snapshot - Uploads a snapshot of Red5 to the repository.</para>
				</listitem>
				<listitem>
					<para>war_demos - Build wars for demo apps.</para>
				</listitem>
				<listitem>
					<para>webwar - Make Web Archive. </para>
				</listitem>
			</itemizedlist>
		</section>
		<section xml:id="BuildingRed5AntandIvy">
			<title>Ant and Ivy</title>
			<para>When cleaning the dependancy libraries using and ant ivy with the following command</para>
			<literallayout>
ant ivyclear
</literallayout>
			<para>It is required to run the rebuild of Red5 in a particular way to make sure ivy retrieved the libraries correctly. </para>
			<literallayout>
ant -Divy.conf.name="java6, eclipse" dist
</literallayout>
			<para>More information here 
				<link xl:href="docs:Ivy">setup with Eclipse</link>
			</para>
		</section>
	</section>
	<section xml:id="BuildingRed5Howtobuildwitheclipse">
		<title>How to build with eclipse</title>
		<para>This guide assumes eclipse 3.1.0 and you have downloaded the entire red5 build from the 
			subversion repository at 
			<link xl:href="https://red5.googlecode.com/svn/java/server/trunk">https://red5.googlecode.com/svn/java/server/trunk</link> 
		</para>
		<section xml:id="BuildingRed5RecommendedEclipsePlugins">
			<title>Recommended Eclipse Plugins</title>
			<para>The following plugins are recommended or required for building red5 in eclipse.</para>
			<itemizedlist>
				<listitem>
					<para>IvyIDE - 
						<link xl:href="http://ant.apache.org/ivy/ivyde/download.cgi">http://ant.apache.org/ivy/ivyde/download.cgi</link>. See here for installation / update instructions 
						<link xl:href="docs:Ivy">setup with Eclipse</link> 
					</para>
				</listitem>
				<listitem>
					<para>Spring IDE - 
						<link xl:href="http://springide.org/project/wiki">http://springide.org/project/wiki</link>
					</para>
				</listitem>
				<listitem>
					<para>Subclipse SVN Plugin - 
						<link xl:href="http://subclipse.tigris.org/">http://subclipse.tigris.org/</link>
					</para>
				</listitem>
			</itemizedlist>
		</section>
		<section xml:id="BuildingRed5ImportingtheRed5Project">
			<title>Importing the Red5 Project</title>
			<para>There are two ways to import the Red5 project. Either import an already downloaded working copy of the Red5 project or import the project directly from SVN.</para>
			<itemizedlist>
				<listitem>
					<para>Import the checked out working copy. </para>
				</listitem>
			</itemizedlist>
			<orderedlist>
				<listitem>
					<para>Start Eclipse </para>
				</listitem>
				<listitem>
					<para>From the File menu select "import" </para>
				</listitem>
				<listitem>
					<para>In the Import dialog box select the item "Existing Projects into Workspace" and hit next </para>
				</listitem>
				<listitem>
					<para>hit the "browse" button next to the "Select root directory" text box </para>
				</listitem>
				<listitem>
					<para>select the root folder where you downloaded the red5 repository,(e.g. c:\projects </para>
				</listitem>
			</orderedlist>
			<blockquote>
				<para>\osflash\red5 or /www/red5_server) and hit ok </para>
			</blockquote>
			<orderedlist>
				<listitem>
					<para>Make sure red5 is selected in the projects area and hit "Finish"</para>
				</listitem>
				<listitem>
					<para>Eclipse should automatically build the project, you can force a build from the "project" </para>
				</listitem>
			</orderedlist>
			<blockquote>
				<para>menu and selecting "build project" </para>
			</blockquote>
			<itemizedlist>
				<listitem>
					<para>Import the project working copy from SVN. (Subclipse must be installed)</para>
				</listitem>
			</itemizedlist>
			<orderedlist>
				<listitem>
					<para>Start Eclipse </para>
				</listitem>
				<listitem>
					<para>From the File menu select "import" </para>
				</listitem>
				<listitem>
					<para>In the Import dialog box select SVN and then select the item "Checkout Projects from SVN" and hit next </para>
				</listitem>
				<listitem>
					<para>A list of available SVN urls will be available, if it is not available select "Create a new repository location" click next and enter 
						<link xl:href="http://red5.googlecode.com/svn/java/server/trunk">http://red5.googlecode.com/svn/java/server/trunk</link> or       
					</para>
				</listitem>
			</orderedlist>
			<blockquote>
				<para>
					<link xl:href="https://red5.googlecode.com/svn/java/server/trunk">https://red5.googlecode.com/svn/java/server/trunk</link>  if you have a google code login.
				</para>
			</blockquote>
			<orderedlist>
				<listitem>
					<para>Click Finish.</para>
				</listitem>
				<listitem>
					<para>Eclipse should automatically build the project, you can force a build from the "project" </para>
				</listitem>
			</orderedlist>
			<blockquote>
				<para>menu and selecting "build project" </para>
			</blockquote>
		</section>
		<section xml:id="BuildingRed5UpdatingtheRed5source">
			<title>Updating the Red5 source</title>
			<orderedlist>
				<listitem>
					<para>In eclipse right click the Red5 source project</para>
				</listitem>
				<listitem>
					<para>Locate to "Team" and then "Update"</para>
				</listitem>
				<listitem>
					<para>The source will be updated from SVN</para>
				</listitem>
				<listitem>
					<para>Right click the Red5 project and select Refresh.</para>
				</listitem>
				<listitem>
					<para>The project should also be cleaned after each update, select Project -> Clean.</para>
				</listitem>
			</orderedlist>
		</section>
		<section xml:id="BuildingRed5DebuggingRed5inEclipse">
			<title>Debugging Red5 in Eclipse</title>
			<orderedlist>
				<listitem>
					<para>Click the arrow next to the Debug icon menu and then click "Open Debug Dialog". </para>
				</listitem>
				<listitem>
					<para>Click "Java Application" in the menu then right click and "New". </para>
				</listitem>
				<listitem>
					<para>Type a name for the debug configuration (ie "Red") and type </para>
				</listitem>
			</orderedlist>
			<blockquote>
				<para>"org.red5.server.Bootstrap" an the main class. </para>
			</blockquote>
			<orderedlist>
				<listitem>
					<para>Select the Arguments tab</para>
				</listitem>
				<listitem>
					<para>Place this into Program Arguments</para>
				</listitem>
			</orderedlist>
			<literallayout>
-Dlogback.ContextSelector=org.red5.logging.LoggingContextSelector -Dcatalina.useNaming=true  -Djava.security.debug=failure
</literallayout>
			<orderedlist>
				<listitem>
					<para>Place this into VM Arguments</para>
				</listitem>
			</orderedlist>
			<literallayout>
-cp ./conf
</literallayout>
			<orderedlist>
				<listitem>
					<para>In OSX with JDK 5 and JDK6 to specify JDK6 the PATH variable has to be set. Goto the Environment Tab, add a new vairable called PATH, and place this in there</para>
				</listitem>
			</orderedlist>
			<literallayout>
/System/Library/Frameworks/JavaVM.framework/Versions/1.6/Home/bin
</literallayout>
			<orderedlist>
				<listitem>
					<para>Click Apply and Close.</para>
				</listitem>
				<listitem>
					<para>Right click the project and choose Build Path -> Configure Build Path. </para>
				</listitem>
				<listitem>
					<para>In the Source Tab, choose Add Folder and select the src/conf directory.</para>
				</listitem>
				<listitem>
					<para>Make sure "Allow output folders for source folders" is selected.</para>
				</listitem>
				<listitem>
					<para>Under red5_server/src/conf, select Output Folder and choose edit. </para>
				</listitem>
				<listitem>
					<para>Select Specific output, select the root directory and choose "create new folder". </para>
				</listitem>
				<listitem>
					<para>Select conf, the output folder for the Red5 configs will now be placed into red5_server/conf. </para>
				</listitem>
				<listitem>
					<para>With the imported red5 project selected click the debug icon and it will launch the </para>
				</listitem>
			</orderedlist>
			<para> server. </para>
			<orderedlist>
				<listitem>
					<para>Console logging will appear in the console window. </para>
				</listitem>
			</orderedlist>
			<literallayout>
If you get an error in the console like : 
java.net.BindException: Address already in use: bind at sun.nio.ch.Net.bind(Native 
Method) at sun.nio.ch.ServerSocketChannelImpl.bind(Unknown 
Source) at sun.nio.ch.ServerSocketAdaptor.bind(Unknown Source) at 
org.apache.mina.io.socket.SocketAcceptor.registerNew(SocketAcceptor.java:362) 
at org.apache.mina.io.socket.SocketAcceptor.access$800(SocketAcceptor.java:46) 
at org.apache.mina.io.socket.SocketAcceptor$Worker.run(SocketAcceptor.java:238) 
Exception in thread "main" 

Then the socket red5 wants to run is in use, you can change the socket and I will write this 
up later today once I speak with Luke.
</literallayout>
		</section>
		<section xml:id="BuildingRed5AntIvyandEclipse">
			<title>Ant, Ivy and Eclipse</title>
			<para>When cleaning the dependancy libraries using ant and ivy with the following command</para>
			<literallayout>
ant ivyclear
</literallayout>
			<para>It is required to run the rebuild of Red5 in a particular way to make sure ivy retrieved the libraries correctly. </para>
			<literallayout>
ant -Divy.conf.name="java6, eclipse" dist
</literallayout>
			<para>Then back in eclipse right click the "ivy.xml" in the project and click Refresh it will also resolve the libraries in Eclipse.</para>
			<para>More information here 
				<link xl:href="Documentation/Tutorials/IvySetupWithEclipse">Documentation/Tutorials/IvySetupWithEclipse</link>
			</para>
		</section>
	</section>
</chapter>