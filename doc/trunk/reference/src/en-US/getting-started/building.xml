<?xml version='1.0' ?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xl="http://www.w3.org/1999/xlink" version="5.0" xml:id="building">
	<title>Building Red5</title>
	<section>
		<title>Build Environment Setup</title>
		<section>
			<title>Ant</title>
			<para>Apache Ant 1.7 and above is required for building the Red5 project source code. download here 
				<link xl:href="http://archive.apache.org/dist/ant/binaries/">http://archive.apache.org/dist/ant/binaries/</link> 
			</para>
			<para>The path to the ant binary must be on your system PATH environment variable (test by 
				typing ant -version at a system prompt) defined, typically </para>
			<literallayout>
PATH=$PATH:/usr/local/ant 
</literallayout>
			<para>You can check this on windows by typing set PATH or on unix by typing echo $PATH </para>
		</section>
		<section>
			<title>Java</title>
			<para>Java 1.5 or 1.6 and above is required for running ant, compiling the source and running the 
				Red5 server. </para>
			<para>Download Java 5 
				<link xl:href="http://java.sun.com/j2se/1.5.0/download.html">http://java.sun.com/j2se/1.5.0/download.html</link> 
			</para>
			<para>Download Java 6 
				<link xl:href="http://java.sun.com/j2se/1.6.0/download.html">http://java.sun.com/j2se/1.6.0/download.html</link> 
			</para>
			<para>You must have the environment variables for JAVA_HOME and JAVA_VERSION defined, 
				typically </para>
			<literallayout>
JAVA_HOME=C:\development\j2sdk\1.5.0_07 JAVA_VERSION=1.5 
</literallayout>
		<para>You can check this on windows by typing</para>
		<screen>
set JAVA_HOME			
		</screen>
		<para>or on unix by typing</para>
		<screen>
$ echo $JAVA_HOME	
		</screen>
		</section>
		<section>
			<title>Red5</title>
			<para>You must have the environment variables for RED5_HOME defined, 
				typically </para>
			<literallayout>
RED5_HOME=/www/red5_server
</literallayout>
			<warning>
				<para>
					FAILURE TO SETUP YOUR ENVIRONMENT VARIABLES WILL PREVENT YOUR FROM BEING ABLE TO BUILD PROPERLY
				</para>
			</warning>
			<note>
				<para>
					You don't need netbeans or eclipse unless you need an IDE for java. 
					<link xl:href="http://www.netbeans.org">Download Netbeans</link> 
					<link xl:href="http://www.eclipse.org">Download Eclipse</link>
				</para>
			</note>
		</section>
	</section>
	<section>
		<title>Building</title>
		<section>
			<title>Getting Red5 Source</title>
			<para>The Red5 source code is available at the 
				<link xl:href="http://code.google.com/p/red5/">google code project page</link> and svn repository.
			</para>
			<orderedlist>
				<listitem>
					<para>With your favourite SVN client check out the source code from svn at this address 
						<link xl:href="http://red5.googlecode.com/svn/java/server/trunk/">http://red5.googlecode.com/svn/java/server/trunk/</link> or 
						<link xl:href="https://red5.googlecode.com/svn/java/server/trunk/">https://red5.googlecode.com/svn/java/server/trunk/</link> if you have a google code login.
					</para>
				</listitem>
				<listitem>
					<para>Team members will be added to the google code project group and in your google code login you will find the svn password for committing changes at this address 
						<link xl:href="http://code.google.com/hosting/settings">http://code.google.com/hosting/settings</link>. 
					</para>
				</listitem>
			</orderedlist>
		</section>
		<section>
			<title>Getting Red5 Demo Applications Source</title>
			<orderedlist>
				<listitem>
					<para>With your favourite SVN client check out the source code from svn at this address 
						<link xl:href="http://red5.googlecode.com/svn/java/example/trunk/">http://red5.googlecode.com/svn/java/example/trunk/</link> or 
						<link xl:href="https://red5.googlecode.com/svn/java/example/trunk/">https://red5.googlecode.com/svn/java/example/trunk/</link> if you have a google code login.
					</para>
				</listitem>
			</orderedlist>
		</section>
		<section>
			<title>Getting Red5 Flash Demo Source</title>
			<orderedlist>
				<listitem>
					<para>With your favourite SVN client check out the source code from svn at this address 
						<link xl:href="http://red5.googlecode.com/svn/flash/trunk/">http://red5.googlecode.com/svn/flash/trunk/</link> or 
						<link xl:href="https://red5.googlecode.com/svn/flash/trunk/">https://red5.googlecode.com/svn/flash/trunk/</link> if you have a google code login.
					</para>
				</listitem>
			</orderedlist>
		</section>
		<section>
			<title>Running the ant build</title>
			<para>To build the red5 source simply run the following command from the command line inside 
				the red5 source directory. </para>
			<screen>
$ ant dist 
		</screen>
		</section>
		<section>
			<title>Current Ant Targets</title>
			<itemizedlist>
				<listitem>
					<para>all - Runs clean, prepare, compile, jar, javadoc targets</para>
				</listitem>
				<listitem>
					<para>bootstrap - Compile and start the server using the bootstrap class</para>
				</listitem>
				<listitem>
					<para>checkout - checks out the Red5 server source (requires svnant.jar)</para>
				</listitem>
				<listitem>
					<para>checkout-all - checks out the entire Red5 project sources from the root level to a specified directory</para>
				</listitem>
				<listitem>
					<para>clean - cleans up all the files and directories</para>
				</listitem>
				<listitem>
					<para>compile - Compiles Red5</para>
				</listitem>
				<listitem>
					<para>compile_core - Build Red5 server sources and downloads java 6 dependancies</para>
				</listitem>
				<listitem>
					<para>compile_core_compatibility - Build Red5 server sources and downloads java 5 dependancies</para>
				</listitem>
				<listitem>
					<para>compile_demos - Copies over the root and installer webapp</para>
				</listitem>
				<listitem>
					<para>compile_script - Compiles scripting sources</para>
				</listitem>
				<listitem>
					<para>compile_tests - Compiles junit test classes</para>
				</listitem>
				<listitem>
					<para>compile_war - Compiles Red5 into a war distribution</para>
				</listitem>
				<listitem>
					<para>console - launches a non-SSL jconsole for managing Red5 in JMX.</para>
				</listitem>
				<listitem>
					<para>console-ssl - launches a SSL jconsole for managing Red5 in JMX with SSL enabled.</para>
				</listitem>
				<listitem>
					<para>doc-all - Generate docbook documentation for html-single, multi html and pdf.</para>
				</listitem>
				<listitem>
					<para>doc-clean - Cleans the docbook files.</para>
				</listitem>
				<listitem>
					<para>doc-html - Compile reference documentation to chunked html.</para>
				</listitem>
				<listitem>
					<para>doc-htmlsingle - Compile reference documentation to single html.</para>
				</listitem>
				<listitem>
					<para>doc-pdf - Compile reference documentation to pdf.</para>
				</listitem>
				<listitem>
					<para>doc-prepare - Extra preparation for the documentation.</para>
				</listitem>
				<listitem>
					<para>dist - Make Binary distribution.</para>
				</listitem>
				<listitem>
					<para>dist-archive - Create archive file for distribution.</para>
				</listitem>
				<listitem>
					<para>dist-cluster - Create Edge/Origin distribution.</para>
				</listitem>
				<listitem>
					<para>dist-debian - Create Debian package.</para>
				</listitem>
				<listitem>
					<para>dist-edge - Builds a Red5 edge distribution.</para>
				</listitem>
				<listitem>
					<para>dist-origin - Builds a Red5 origin distribution.</para>
				</listitem>
				<listitem>
					<para>dist-installer - Make Installer distribution.</para>
				</listitem>
				<listitem>
					<para>dist-macosx - Create Mac OSX installer.</para>
				</listitem>
				<listitem>
					<para>dist-windows - Create Windows installer.</para>
				</listitem>
				<listitem>
					<para>dist-redhat - Create Redhat installer.</para>
				</listitem>
				<listitem>
					<para>ivyclear - Clears out the Ivy cache.</para>
				</listitem>
				<listitem>
					<para>jar-determine-classpath - Determine classpath for jar file.</para>
				</listitem>
				<listitem>
					<para>jar - Make Archive.</para>
				</listitem>
				<listitem>
					<para>javadoc - Generate JavaDoc.</para>
				</listitem>
				<listitem>
					<para>java6.check - Checks for Java 6. </para>
				</listitem>
				<listitem>
					<para>prepare - Prepares for building Red5.</para>
				</listitem>
				<listitem>
					<para>server - Compile and start the server.</para>
				</listitem>
				<listitem>
					<para>shutdown - Shuts down the running Red5 instance.</para>
				</listitem>
				<listitem>
					<para>udp_server - Compile and start experimental UDP server.</para>
				</listitem>
				<listitem>
					<para>run-tests - Run JUnit tests and generate HTML reports.</para>
				</listitem>
				<listitem>
					<para>run-tests-systemtest - Runs some end-to-end system tests against a test server using a flash client.</para>
				</listitem>
				<listitem>
					<para>run-tests-server - Run the selftest server.</para>
				</listitem>
				<listitem>
					<para>svn-add - Add files to svn.</para>
				</listitem>
				<listitem>
					<para>remotejar - Creates a jar that may be deployed with remote applications.</para>
				</listitem>
				<listitem>
					<para>retrieve - Retrieves the libraries if needed.</para>
				</listitem>
				<listitem>
					<para>rtmps_keystore - Creates the keystore file in the conf directory required by RTMPS.</para>
				</listitem>
				<listitem>
					<para>truststore - Creates a duplicate keystore file and generates a truststore file for jconsole SSL connections.</para>
				</listitem>
				<listitem>
					<para>upload-snapshot - Uploads a snapshot of Red5 to the repository.</para>
				</listitem>
				<listitem>
					<para>war_demos - Build wars for demo apps.</para>
				</listitem>
				<listitem>
					<para>webwar - Make Web Archive. </para>
				</listitem>
			</itemizedlist>
		</section>
		<section>
			<title>Ant and Ivy</title>
			<para>When cleaning the dependancy libraries using and ant ivy with the following command</para>
			<screen>
$ ant ivyclear
</screen>
			<para>It is required to run the rebuild of Red5 in a particular way to make sure ivy retrieved the libraries correctly. </para>
			<screen>
$ ant -Divy.conf.name="java6, eclipse" dist
</screen>
	
		</section>
	</section>
	<section>
		<title>How to build with eclipse</title>
		<para>This guide assumes eclipse 3.1.0 and you have downloaded the entire red5 build from the 
			subversion repository at 
			<link xl:href="https://red5.googlecode.com/svn/java/server/trunk">https://red5.googlecode.com/svn/java/server/trunk</link> 
		</para>
		<section>
			<title>Recommended Eclipse Plugins</title>
			<para>The following plugins are recommended or required for building red5 in eclipse.</para>
			<itemizedlist>
				<listitem>
					<para>IvyIDE - 
						<link xl:href="http://ant.apache.org/ivy/ivyde/download.cgi">http://ant.apache.org/ivy/ivyde/download.cgi</link>. See here for installation / update instructions 
					</para>
				</listitem>
				<listitem>
					<para>Spring IDE - 
						<link xl:href="http://springide.org/project/wiki">http://springide.org/project/wiki</link>
					</para>
				</listitem>
				<listitem>
					<para>Subclipse SVN Plugin - 
						<link xl:href="http://subclipse.tigris.org/">http://subclipse.tigris.org/</link>
					</para>
				</listitem>
			</itemizedlist>
		</section>
		<section>
			<title>Importing the Red5 Project</title>
			<para>There are two ways to import the Red5 project. Either import an already downloaded working copy of the Red5 project or import the project directly from SVN.</para>

			<procedure>
				<title>Import the checked out working copy.</title>
				<step><para>Start Eclipse.</para></step>
				<step>
					<para>Begin to import project 
					<menuchoice>
  						<guimenu>File</guimenu>
  						<guimenuitem>Import</guimenuitem>
					</menuchoice>
					</para>
				</step>
				<step><para>In the Import dialog box select the item <guimenuitem>Existing Projects into Workspace</guimenuitem> and hit <guibutton>next</guibutton>.</para></step>
				<step><para>Hit the <guibutton>browse</guibutton> button next to the <guilabel>Select root directory</guilabel> text box.</para></step>
				<step><para>Select the root folder where you downloaded the red5 repository,(e.g. c:\projects \osflash\red5 or /www/red5_server) and hit ok.</para></step>
				<step><para>Make sure red5 is selected in the projects area and hit <guibutton>Finish</guibutton>.</para></step>
				<step><para>Eclipse should automatically build the project, you can force a build from the menu
					<menuchoice>
  						<guimenu>Project</guimenu>
  						<guimenuitem>Build Project</guimenuitem>
					</menuchoice>
					</para>
				</step>
			</procedure>
			
			<procedure>
				<title>Import the project working copy from SVN. (Subclipse must be installed).</title>
				<step>
					<para>Begin to import project 
					<menuchoice>
  						<guimenu>File</guimenu>
  						<guimenuitem>Import</guimenuitem>
					</menuchoice>
					</para>
				</step>
				<step><para>In the Import dialog box select SVN and then select the item <guimenuitem>Checkout Projects from SVN</guimenuitem> and hit <guibutton>next</guibutton>.</para></step>
				<step>
					<para>A list of available SVN urls will be available, if it is not available select <guimenuitem>Create a new repository location</guimenuitem> click <guibutton>Next</guibutton> and enter. 
						<link xl:href="http://red5.googlecode.com/svn/java/server/trunk">http://red5.googlecode.com/svn/java/server/trunk</link> or.\
						<link xl:href="https://red5.googlecode.com/svn/java/server/trunk">https://red5.googlecode.com/svn/java/server/trunk</link>  if you have a google code login.
					</para>
				</step>		
				<step><para>Click <guibutton>Finish</guibutton>.</para></step>
				<step><para>Eclipse should automatically build the project, you can force a build from the menu
					<menuchoice>
  						<guimenu>Project</guimenu>
  						<guimenuitem>Build Project</guimenuitem>
					</menuchoice>
					</para>
				</step>
			</procedure>
		</section>
		<section>
			<title>Updating the Red5 source from Eclipse.</title>
			<procedure>
				<title>Updating the Red5 source from trunk.</title>
				<step><para>In eclipse right click the Red5 source project.</para></step>
				<step><para>Locate to 
					<menuchoice>
  						<guimenu>Team</guimenu>
  						<guimenuitem>Update</guimenuitem>
					</menuchoice>
					</para>
				</step>
				<step><para>The source will be updated from SVN.</para></step>
				<step><para>Right click the Red5 project and select <guimenuitem>Refresh</guimenuitem>.</para></step>
				<step><para>The project should also be cleaned after each update, by the following
					<menuchoice>
  						<guimenu>Project</guimenu>
  						<guimenuitem>Clean</guimenuitem>
					</menuchoice>
					</para>
				</step>
			</procedure>
		</section>
		<section>
			<title></title>
			<procedure>
				<title>Debugging Red5 in Eclipse.</title>
				<step><para>Click the arrow next to the <guiicon><inlinegraphic fileref="images/debug_icon.png"/></guiicon> icon menu and then click <guimenuitem>Debug Configurations</guimenuitem>.</para></step>
				<step><para>Click <guimenuitem>Java Application</guimenuitem> in the menu then right click and <guimenuitem>New</guimenuitem>.</para></step>
				<step><para>Type a name for the debug configuration (ie <guilabel>Red</guilabel>) and type <guilabel>org.red5.server.Bootstrap</guilabel> as the main class.</para></step>
				<step><para>Select the <guimenuitem>Arguments</guimenuitem> tab.</para></step>
				<step><para>In the <guilabel>Program Arguments enter</guilabel>
					<literallayout>
-Dlogback.ContextSelector=org.red5.logging.LoggingContextSelector -Dcatalina.useNaming=true  -Djava.security.debug=failure
</literallayout>  
					</para>
				</step>
				<step><para>In the <guilabel>VM Arguments</guilabel> enter
				<literallayout>
-cp ./conf
</literallayout>
				</para></step>
				<step><para>In OSX with JDK 5 and JDK6 to specify JDK6 the PATH variable has to be set. Goto the <guilabel>Environment</guilabel> Tab, add a new variable called PATH, and place this in there.
				<literallayout>
/System/Library/Frameworks/JavaVM.framework/Versions/1.6/Home/bin
</literallayout>
				</para></step>
				<step><para>Click <guibutton>Apply</guibutton> and <guibutton>Close</guibutton>.</para></step>
				<step><para>Goto the build configure path dialog
					<menuchoice>
  						<guimenu>Build Path</guimenu>
  						<guimenuitem>Configure Build Path</guimenuitem>
					</menuchoice>
					</para>
				</step>
				<step><para>In the <guimenuitem>Source</guimenuitem> tab choose <guibutton>Add Folder</guibutton>
				and select the <guilabel>src/conf directory</guilabel>.</para></step>
				<step><para>Make sure "Allow output folders for source folders" is selected.</para></step>
				<step><para>Under <guilabel>red5_server/src/conf</guilabel>, select <guilabel>Output Folder</guilabel> and choose <guibutton>Edit</guibutton>.</para></step>
				<step><para>Select <guilabel>Specific Output Folder</guilabel>, select the root directory and choose "create new folder" and choose "conf".</para></step>
				<step><para>Select conf, the output folder for the Red5 configs will now be placed into red5_server/conf.</para></step>
				<step><para>With the imported red5 project selected click the debug icon and it will launch the server.</para></step>
				<step><para>Console logging will appear in the console window.</para></step>
			</procedure>
			<para>If you get an error in the console like:</para>
			<literallayout> 
java.net.BindException: Address already in use: bind at sun.nio.ch.Net.bind(Native 
Method) at sun.nio.ch.ServerSocketChannelImpl.bind(Unknown 
Source) at sun.nio.ch.ServerSocketAdaptor.bind(Unknown Source) at 
org.apache.mina.io.socket.SocketAcceptor.registerNew(SocketAcceptor.java:362) 
at org.apache.mina.io.socket.SocketAcceptor.access$800(SocketAcceptor.java:46) 
at org.apache.mina.io.socket.SocketAcceptor$Worker.run(SocketAcceptor.java:238) 
Exception in thread "main" 
</literallayout>
			<para>Then the socket red5 wants to run is in use, you can change the socket port in the property rtmp.port in the property file red5.properties.</para>
		</section>
		<section>
			<title>Ant, Ivy and Eclipse</title>
			<para>When cleaning the dependancy libraries using ant and ivy with the following command</para>
			<screen>
$ ant ivyclear
</screen>
			<para>It is required to run the rebuild of Red5 in a particular way to make sure ivy retrieved the libraries correctly. </para>
			<screen>
$ ant -Divy.conf.name="java6, eclipse" dist
</screen>
			<para>Then back in eclipse right click the <guilabel>ivy.xml</guilabel> in the project and click <guimenuitem>Refresh</guimenuitem> it will also resolve the libraries in Eclipse.</para>
		</section>
	</section>
</chapter>